{"meta":{"title":"Anges Zhu","subtitle":null,"description":null,"author":"Anges Zhu","url":"https://angeszhu.github.io","root":"/"},"pages":[{"title":"关于","date":"2019-05-30T05:23:02.746Z","updated":"2019-05-28T09:43:54.000Z","comments":true,"path":"about/index.html","permalink":"https://angeszhu.github.io/about/index.html","excerpt":"","text":""},{"title":"archives","date":"2019-05-29T05:35:51.000Z","updated":"2019-05-29T07:03:02.000Z","comments":true,"path":"archives/index.html","permalink":"https://angeszhu.github.io/archives/index.html","excerpt":"","text":""},{"title":"行业大佬们","date":"2019-05-30T05:23:02.763Z","updated":"2019-05-29T06:07:33.000Z","comments":true,"path":"friends/index.html","permalink":"https://angeszhu.github.io/friends/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2019-05-29T05:36:27.000Z","updated":"2019-05-29T05:39:55.000Z","comments":true,"path":"categories/index.html","permalink":"https://angeszhu.github.io/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2019-05-30T05:23:02.809Z","updated":"2019-05-28T09:48:10.000Z","comments":true,"path":"tags/index.html","permalink":"https://angeszhu.github.io/tags/index.html","excerpt":"","text":""},{"title":"开源项目","date":"2019-05-29T05:37:12.000Z","updated":"2019-05-29T06:41:05.000Z","comments":true,"path":"projects/index.html","permalink":"https://angeszhu.github.io/projects/index.html","excerpt":"","text":"Dubbo接口测试工具https://github.com/AngesZhu/mytool"},{"title":"404 Not Found","date":"2019-05-30T05:23:02.728Z","updated":"2019-05-29T07:06:20.000Z","comments":true,"path":"404/index.html","permalink":"https://angeszhu.github.io/404/index.html","excerpt":"","text":"404 Not Found **很抱歉，您访问的页面不存在** 可能是输入地址有误或该地址已被删除"}],"posts":[{"title":"Django安装以及创建项目","slug":"install-django","date":"2019-06-01T02:44:55.000Z","updated":"2019-06-02T14:41:59.593Z","comments":true,"path":"2019/06/01/install-django/","link":"","permalink":"https://angeszhu.github.io/2019/06/01/install-django/","excerpt":"","text":"Django安装以及创建项目Django安装Python版本以及Django版本选择Django2.0以上版本，支持Python3.4以上的版本，而取消对Python2的支持。 而Django 1.11是支持Python2.7的最后版本。 压缩包下载安装下载Django 下载Python的第三方库包地址 下载 Django 压缩包， 解压并和Python安装目录放在同一个根目录， 进入 Django 目录，执行python setup.py install， 然后开始安装，Django将要被安装到Python的Lib下site-packages。 然后是配置环境变量，将这几个目录添加到系统环境变量中: C:\\Python33\\Lib\\site-packages\\django;C:\\Python33\\Scripts。 添加完成后就可以使用Django的django-admin.py命令新建工程了。 Pip命令安装在终端输入以下命令： 1pip install Django 如果想要制定Django版本，那么可以输入，当然版本号可以根据需要来输入: 1pip install Django==2.0.5 检查Django是否安装成功输入以下命令进行检查： 12import djangodjango.__version__ 如果出现如下图一样的内容，那么证明你安装成功了。 Django项目的创建1.命令行创建django项目在终端输入命令:django-admin startproject 项目名称 注意:你在哪个目录输入命令创建，你的项目就会创建到哪里 2.使用编译器创建Django项目选择:File -&gt; New Project 选择django，填写django项目名称， 选择环境运行的sdk以及django配置，是否创建app，app名称等内容 3.Django的目录结构 一个Django项目，可以包含多个项目应用， 这些应用在Django中，又可以称为app。 每一个app代表网站的一个，或多个网页。 创建 app时，可以进入项目目录， 然后用命令： python manage.py startapp app名称 创建 也可以在pycharm创建项目时，就一起创建好，pycharm给我们提供了这样的功能。 4.Django项目的启动1.命令行启动 python manage.py runserver 2.pycharm启动 在图中我们可以看到，右上角的运行附近，有一个选择框。 这里可以选择我们的django项目，点击右侧三角，即可运行django调试服务器。 而另外一个选项，Edit，可以配置我们django项目启动的一些信息，例如:ip、端口号等 如果没有Dj启动，也可以利用Edit添加一个Django启动。 但是添加的时候要跟Django配置的一样。 这里最重要的，就是在设置中，把setting加载进去。 启动后在浏览器输入地址:127.0.0.1:8000 可以打开成功页面，即项目创建成功","categories":[{"name":"技术栈","slug":"技术栈","permalink":"https://angeszhu.github.io/categories/技术栈/"},{"name":"Django","slug":"技术栈/Django","permalink":"https://angeszhu.github.io/categories/技术栈/Django/"}],"tags":[{"name":"Django","slug":"Django","permalink":"https://angeszhu.github.io/tags/Django/"},{"name":"Python","slug":"Python","permalink":"https://angeszhu.github.io/tags/Python/"},{"name":"Web框架","slug":"Web框架","permalink":"https://angeszhu.github.io/tags/Web框架/"},{"name":"测试开发","slug":"测试开发","permalink":"https://angeszhu.github.io/tags/测试开发/"}]},{"title":"Django介绍","slug":"django-info","date":"2019-06-01T02:09:40.000Z","updated":"2019-06-01T02:37:22.520Z","comments":true,"path":"2019/06/01/django-info/","link":"","permalink":"https://angeszhu.github.io/2019/06/01/django-info/","excerpt":"","text":"什么是Djangodjango(Python Web 框架) Django是一个开放源代码的Web应用框架，由Python写成。采用了MVC的框架模式，即模型M，视图V和控 制器C。它最初是被开发来用于管理劳伦斯出版集团旗下的一些以新闻内容为主的网站的，即是CMS(内容 管理系统)软件。并于2005年7月在BSD许可证下发布。这套框架是以比利时的吉普赛爵士吉他手Django Reinhardt来命名的。 架构设计Django是一个基于MVC构造的框架。 但是在Django中，控制器接受用户输入的部分由框架自行处理， 所以 Django 里更关注的是模型(Model)、模板(Template)和视图(Views)，称为 MTV模式。 它们各自的职责 如下: 层次 职责 模型(Model)，即数 据存取层 处理与数据相关的所有事务: 如何存取、如何验证有效性、包含哪些行为 以及数据之间的关系等。 模板(Template)，即表 现层 处理与表现相关的决定: 如何在页面或其他类型文档中进行显示。 视图(View)，即业务 逻辑层 存取模型及调取恰当模板的相关逻辑。模型与模板的桥梁。 从以上表述可以看出Django视图不处理用户输入，而仅仅决定要展现哪些数据给用户， 而Django模板仅仅决定如何展现Django视图指定的数据。 或者说, Django将MVC中的视图进一步分解为 Django视图 和 Django模板两个部分， 分别决定 “展现哪些数据” 和 “如何展现”，使得Django的模板可以根据需要随时替 换，而不仅仅限制于内置的模板。 至于MVC控制器部分，由Django框架的URLconf来实现。URLconf机制是使用正则表达式匹配URL， 然后调 用合适的Python函数。URLconf对于URL的规则没有任何限制，你完全可以设计成任意的URL风格， 不管是 传统的，RESTful的，或者是另类的。 框架把控制层给封装了，无非与数据交互这层都是数据库表的读,写,删 除,更新的操作。 在写程序的时候，只要调用相应的方法就行了，感觉很方便。 程序员把控制层东西交给 Django自动完成了。 只需要编写非常少的代码完成很多的事情。 所以，它比MVC框架考虑的问题要深一 步，因为我们程序员大都在写控制层的程序。 现在这个工作交给了框架，仅需写很少的调用代码，大大提高 了工作效率。 Django的主要目的是简便、快速的开发数据库驱动的网站。 它强调代码复用，多个组件可以很方便的以“插 件”形式服务于整个框架， Django有许多功能强大的第三方插件，你甚至可以很方便的开发出自己的工具包。 这使得Django具有很强的可扩展性。 它还强调快速开发和DRY(Do Not Repeat Yourself)原则。 Django基于MVC的设计十分优美: 对象关系映射 (ORM,object-relational mapping): 以Python类形式定义你的数据模型，ORM将模型与 关系数据库连接起来，你将得到一个非常容易使用的数据库API，同时你也可以在Django中使用原始的 SQL语句。 URL 分派: 使用正则表达式匹配URL，你可以设计任意的URL，没有框架的特定限定。像你喜欢的一样 灵活。 模版系统: 使用Django强大而可扩展的模板语言，可以分隔设计、内容和Python代码。并且具有可继 承性。 表单处理: 你可以方便的生成各种表单模型，实现表单的有效性检验。可以方便的从你定义的模型实例 生成相应的表单。 Cache系统: 可以挂在内存缓冲或其它的框架实现超级缓冲 – 实现你所需要的粒度。 会话(session)，用户登录与权限检查，快速开发用户会话功能。 国际化: 内置国际化系统，方便开发出多种语言的网站。 自动化的管理界面: 不需要你花大量的工作来创建人员管理和更新内容。Django自带一个ADMIN site, 类似于内容管理系统 工作机制 1.用manage .py runserver 启动Django服务器时就载入了在同一目录下的settings .py。该文件包含了项目 中的配置信息，如前面讲的URLConf等，其中最重要的配置就是ROOT_URLCONF，它告诉Django哪个 Python模块应该用作本站的URLConf，默认的是urls .py2.当访问url的时候，Django会根据ROOT_URLCONF的设置来装载URLConf。 3.然后按顺序逐个匹配URLConf里的URLpatterns。如果找到则会调用相关联的视图函数，并把HttpRequest对象作为第一个参数(通常是request) 4.最后该view函数负责返回一个HttpResponse对象 附录(点击可进入) The Django Book Django官方网站 Django官方文档","categories":[{"name":"技术栈","slug":"技术栈","permalink":"https://angeszhu.github.io/categories/技术栈/"},{"name":"Django","slug":"技术栈/Django","permalink":"https://angeszhu.github.io/categories/技术栈/Django/"}],"tags":[{"name":"Django","slug":"Django","permalink":"https://angeszhu.github.io/tags/Django/"},{"name":"Python","slug":"Python","permalink":"https://angeszhu.github.io/tags/Python/"},{"name":"Web框架","slug":"Web框架","permalink":"https://angeszhu.github.io/tags/Web框架/"},{"name":"测试开发","slug":"测试开发","permalink":"https://angeszhu.github.io/tags/测试开发/"}]},{"title":"Python环境的安装","slug":"install-python","date":"2019-05-31T13:20:58.000Z","updated":"2019-05-31T14:28:44.392Z","comments":true,"path":"2019/05/31/install-python/","link":"","permalink":"https://angeszhu.github.io/2019/05/31/install-python/","excerpt":"Python安装以及Pycharm安装本篇简单介绍一下Python的开发环境的安装","text":"Python安装以及Pycharm安装本篇简单介绍一下Python的开发环境的安装 版本选择 目前，根据数据显示，使用Python2.xd 开发者站63.7%，而使用Python3.x的用户站36.3%，由此可见使用使用Python2.x的用户还是占多数。2014年，Python的创始人宣布将Python2.7支持时间延长到2020年，那么初学者应该选择什么版本呢？目前建议初学者选择Python3.x版本1、目前，使用Python3.x是大势所趋2、Python3.x在Python2.x的基础上做了功能升级3、Python3.x和Python2.x思想基本是共通的当然选择Python3.x也会有缺点，那就是很多扩展库的发行总是滞后于Python的发行版本，甚至目前还有很多库不支持Python3.x。因此，在选择Python时候，一定要先考虑清楚自己的学习目的，例如，打算做哪方面的开发、需要用到哪些扩展库，以及扩展库支持的最高Python版本等。明确这些问题后再做出适合自己的选择。 我们这里选择的介绍安装的版本是Python 3.7.2 Python安装下载安装包首先我们需要去官网选择我们想要下载的Python版本。 Python官网下载地址点击跳转 可以在页面中选择您想要下载安装的python版本 我们选择的版本是Python3.7.2 选择版本后，进入下一个页面，页面拖到最下方，我们可以看到一个表格。 我们可以在这个表格中，根据您的操作系统等，来选择您想要下载安装的Python安装包。 我们本教程选择的版本是: 点击后，即可下载Python安装包。 安装Python（Windows系统）双击我们下载好的安装包，打开安装界面(如下图)。 红圈块的地方，给大家详细说明一下。 1.默认安装这里的默认安装，包含了Python的安装目录，我们可以看到红圈中的路径，那个路径，就是我们Python安装完的路径。 2.自定义安装 在下面的步骤中，我们可以选择安装的很多内容，这里我们需要注意的就是这个安装目录。 由于Window启动和运行的一些问题，我们并不推荐安装至C盘，所以大家尽量换一个盘来装。 我们这里换到了D盘。 3.添加Python至环境变量环境变量这里，大家一定要勾选，因为可以节省我们很多事情。防止因为环境变量配置错误而出现异常。 点击安装后，Python就已经开始安装了。 当出现如上图时，证明我们的Python就已经安装成功了。 我们现在就可以来检查一下Python是否安装成功了。 win+R 输入cmd 打开我们的dos界面，输入python 当出现如上图时，证明我们的python正确安装了。 输入pip，可以查看我们的pip是否可以正常使用。 安装Python（Mac系统）因为系统中有一些内容是基于Python来运行，Mac系统是自带Python环境的。 但是这个Python环境版本为2.x的Python，想要直接使用Python2.x版本的Python，则不需要安装。 Mac系统中的Python安装就相对简单很多，只需要我们下载好安装包，安装就好。 他有很多内容并不需要我们来勾选。 多Python版本兼容windows系统在一些情况下，我们的电脑需要安装两个版本的Python，那么就会有一个兼容的问题。 官方给我们提供了一个小工具:py.exe py.exe存在于python3.X以上的版本，存在目录:C:\\Windows py.exe的使用: Python启动: 12python2.X: py -2 python3.X: py -3 Pip的启动: Pip的使用与正常pip使用一致，只是把命令pip替换成带有 目标版本的命令 12python2.X: py -2 –m pip python3.X: py -3 –m pip Python启动声明python版本: 12python2.X: #!python2 python3.X: #!python3 mac系统在mac中使用python，在命令上加上3即可。 Windows中的py.exe并不存在。 相较windows来说，要简单很多，具体使用如下图： Pycharm安装下载以及安装首先我们需要去官网选择我们想要下载的Python版本。 社区版：功能简单，可以满足日常练习以及写脚本的需求，但在项目级开发时，略显不足。 专业版：功能全面，可以满足所有的Python开发使用。 社区版免费，专业版需要激活或者购买。 Pycharm官网下载地址点击跳转 Windows下安装Pycharm，需注意安装路径不要有中文。 Mac下直接把Pycharm安装到应用程序即可。 激活 服务器激活 在license server中输入地址:http://xidea.online 地址不唯一，随意百度有很多可以使用的。 修改时间方式(新版本不可用) Pycharm注册界面不动 调整电脑系统时间2038年(时间随意) 注册界面选择申请30天试用 退出pycharm 电脑时间调整回正常时间 淘宝购买全家桶账号激活 缺点:激活一次管一年，到期后要找客服免费续期 网上下载jar包，修改配置激活 但是要注意jar包与Pycharm版本的对应关系，并不是所有的版本都可以用一个jar包激活。","categories":[{"name":"技术栈","slug":"技术栈","permalink":"https://angeszhu.github.io/categories/技术栈/"},{"name":"Python","slug":"技术栈/Python","permalink":"https://angeszhu.github.io/categories/技术栈/Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://angeszhu.github.io/tags/Python/"},{"name":"环境","slug":"环境","permalink":"https://angeszhu.github.io/tags/环境/"}]},{"title":"技术栈（简单整理）","slug":"Knowledge-system","date":"2019-05-31T08:25:28.000Z","updated":"2019-05-31T08:32:17.785Z","comments":true,"path":"2019/05/31/Knowledge-system/","link":"","permalink":"https://angeszhu.github.io/2019/05/31/Knowledge-system/","excerpt":"","text":"","categories":[{"name":"日常需要","slug":"日常需要","permalink":"https://angeszhu.github.io/categories/日常需要/"},{"name":"寻找目标","slug":"日常需要/寻找目标","permalink":"https://angeszhu.github.io/categories/日常需要/寻找目标/"}],"tags":[{"name":"知识体系 学习方向 职业规划","slug":"知识体系-学习方向-职业规划","permalink":"https://angeszhu.github.io/tags/知识体系-学习方向-职业规划/"}]},{"title":"Markdown使用手册（持续更新）","slug":"Markdown-text","date":"2019-05-29T07:56:53.000Z","updated":"2019-05-31T08:18:20.080Z","comments":true,"path":"2019/05/29/Markdown-text/","link":"","permalink":"https://angeszhu.github.io/2019/05/29/Markdown-text/","excerpt":"Markdown简介 Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。","text":"Markdown简介 Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。 它的优缺点优点： 1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。2、操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可 缺点： 1、需要记一些语法（当然，是很简单。五分钟学会）。2、有些平台不支持Markdown编辑模式。 Markdown语法 一、标题在想要设置为标题的文字前面加符号#来表示一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。注：标准语法一般在#后跟个空格再写文字。示例： 123456# 这是一级标题## 这是二级标题### 这是三级标题#### 这是四级标题##### 这是五级标题###### 这是六级标题 效果如下： 二、字体 加粗 要加粗的文字左右分别用两个’*’号包起来 斜体 要倾斜的文字左右分别用一个’*’号包起来 斜体加粗 要倾斜和加粗的文字左右分别用三个’*’号包起来 删除线 要加删除线的文字左右分别用两个’~~’号包起来 示例： 1234**这是加粗的文字***这是倾斜的文字****这是斜体加粗的文字***~~这是加删除线的文字~~ 效果如下： 这是加粗的文字这是倾斜的文字这是斜体加粗的文字这是加删除线的文字 三、引用在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;n个…貌似可以一直加下去，但没神马卵用示例： 1234&gt;这是引用的内容&gt;&gt;这是引用的内容&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容 效果如下： 这是引用的内容 这是引用的内容 这是引用的内容 四、分割线三个或者三个以上的 - 或者 * 都可以。示例： 1234-------******** 效果如下： 五、图片语法：![图片alt](图片地址 ‘’图片title’’) 图片alt就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加 示例： 1![](https://www.baidu.com/link?url=Oshs7TTIS7ATkTi_mTNlFyP2mBI3Jpg9oRrO2kY9c7HsH1fxPGuV36DcNatRqI00WOvZVk9jqhCJugunwZd0szzwyJSL48TZqxexmJx_FxXn5vHaZ4R1XIFzXym_uWsh54i7241XpLSXkWYV71RZR-RRLeSiq-fOcSd-NPaY2jYqyIDN-tH_lvb_zX83bEJ2ciaV5f_HAF8xoEB3O6eWWvvB_iNnlYEEW4EBaaX73tOvcm-c4Iu_6A4LCncOSdADHdDOAYZbyP6dPTZaGbKjGdmZkxeTzN3Ln8EagEz7elDJCPlAlT3Xx3fr9v2TOVh9T_XonNm8XJ_jTtimSGNvh72wKSimrhns9kM-bio8Y6G_sPOcE91lAJfUyqmWOFQ4HNDo0U5uF-LXzL6qazjHZdAL4422LCf3OoQW8FywGDHmrL7pIoXKn3wGcIEjgf3IV-ZrfIDmq2UsfB7oxpENGMtQiGtjTqdJ5PFNxCxFMe-HykBsCjkl33t2raHgYco_QOId237Qzw7KTpmpDu5cm-uIYTrm9j0jjnjiwcJJyT-kk0xcySjOwk4FT2xBxo0I8h3rwhYUJkxXtDi1YHUyI5rvFo9UBxVnqLBV8mx0CcjRnxeDWWxpOKrfJSGz9aPERRR0ApPP1A3PlL8zKMLmE_&amp;timg=&amp;click_t=1559285904085&amp;s_info=1425_789&amp;wd=&amp;eqid=adaa6738000d4b05000000045cf0d08c &quot;小猫咪&quot;) 由于Hexo对网络图片不太友好，大家就自己试效果吧。 上传本地图片直接点击导航栏的图片标志，选择图片即可 六、超链接语法： 1[超链接名](超链接地址 &quot;超链接title&quot;) title可加可不加 示例： 12[简书](http://jianshu.com)[百度](http://baidu.com) 效果如下：简书百度注：Markdown本身语法不支持链接在新页面中打开。 七、列表 无序列表 语法：无序列表用 - + * 任何一种都可以 123- 列表内容+ 列表内容* 列表内容 注意：- + * 跟内容之间都要有一个空格 效果如下： 列表内容 列表内容 列表内容 有序列表 语法：数字加点1.列表内容2.列表内容3.列表内容 注意：序号跟内容之间要有空格 效果如下：1.列表内容2.列表内容3.列表内容 列表嵌套 上一级和下一级之间敲三个空格即可 示例： 12345678910111213141516171819* 一级无序列表内容 * 二级无序列表内容 * 二级无序列表内容 * 二级无序列表内容* 一级无序列表内容 1.二级有序列表内容 2.二级有序列表内容 3.二级有序列表内容1.一级有序列表内容 * 二级无序列表内容 * 二级无序列表内容 * 二级无序列表内容2.一级有序列表内容 1.二级有序列表内容 2.二级有序列表内容 3.二级有序列表内容 效果如下： 一级无序列表内容 二级无序列表内容 二级无序列表内容 二级无序列表内容 一级无序列表内容 1.二级有序列表内容 2.二级有序列表内容 3.二级有序列表内容 1.一级有序列表内容 二级无序列表内容 二级无序列表内容 二级无序列表内容 2.一级有序列表内容 1.二级有序列表内容 2.二级有序列表内容 3.二级有序列表内容 八、表格语法： 1234567891011表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略 示例： 12345姓名|技能|排行--|:--:|--:刘备|哭|大哥关羽|打|二哥张飞|骂|三弟 效果如下： 姓名 技能 排行 刘备 哭 大哥 关羽 打 二哥 九、代码语法：单行代码：代码之间分别用一个反引号包起来 1`代码内容` 代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行 12345(```) 代码... 代码... 代码...(```) 注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。 示例：单行代码 1`create database hero;` 代码块 123456(```) function fun()&#123; echo &quot;这是一句非常牛逼的代码&quot;; &#125; fun();(```) 效果如下：单行代码create database hero;代码块 1234function fun()&#123; echo &quot;这是一句非常牛逼的代码&quot;;&#125;fun(); 十、流程图 一个纯文本的语法怎么画图？ 1将流程图代码包含在```folw和```之间即可 流程图代码分两块，上面一块是创建你的流程（创建元素），然后隔一行，创建流程的走向(连接元素) 创建流程（元素）：tag=&gt;type: content:&gt;url tag 是流程图中的标签，在第二段连接元素时会用到。名称可以任意，一般为流程的英文缩写和数字的组合。 type 用来确定标签的类型，=&gt;后面表示类型。由于标签的名称可以任意指定，所以要依赖type来确定标签的类型 标签有6种类型：start end operation subroutine condition inputoutput content 是流程图文本框中的描述内容，: 后面表示内容，中英文均可。特别注意，冒号与文本之间一定要有个空格 url是一个连接，与框框中的文本相绑定，:&gt;后面就是对应的 url 链接，点击文本时可以通过链接跳转到 url 指定页面 指向流程(连接元素)：标识（类别）-&gt;下一个标识 使用 -&gt; 来连接两个元素 对于condition类型，有yes和no两个分支，如示例中的cond(yes)和cond(no) 每个元素可以制定分支走向，默认向下，也可以用right指向右边，如示例中cond2(yes,right)。 流程图元素 开始st=&gt;start: 开始 操作op1=&gt;operation: 操作、执行说明 条件cond=&gt;condition: 确认？ 子程序sub1=&gt;subroutine: 子程序操作说明 用户输入或输出io1=&gt;inputoutput: 输入密码 结束e=&gt;end: 结束 十一 整一个To Do List12- [x] 学习python基础 【减号+[+空格或x+]+空格】- [ ] 学习python网络编程 学习python基础 【减号+[+空格或x+]+空格】 学习python网络编程 参考资料：https://www.jianshu.com/p/191d1e21f7edst=>start: 开始 e=>end: 登录 io1=>inputoutput: 输入用户名密码 sub1=>subroutine: 数据库查询子类 cond=>condition: 是否有此用户 cond2=>condition: 密码是否正确 op=>operation: 读入用户信息 st->io1->sub1->cond cond(yes,right)->cond2 cond(no)->io1(right) cond2(yes,right)->op->e cond2(no)->io1{\"scale\":1,\"line-width\":2,\"line-length\":50,\"text-margin\":10,\"font-size\":12} var code = document.getElementById(\"flowchart-0-code\").value; var options = JSON.parse(decodeURIComponent(document.getElementById(\"flowchart-0-options\").value)); var diagram = flowchart.parse(code); diagram.drawSVG(\"flowchart-0\", options);","categories":[{"name":"日常需要","slug":"日常需要","permalink":"https://angeszhu.github.io/categories/日常需要/"},{"name":"文档编写","slug":"日常需要/文档编写","permalink":"https://angeszhu.github.io/categories/日常需要/文档编写/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://angeszhu.github.io/tags/Markdown/"},{"name":"文档编写","slug":"文档编写","permalink":"https://angeszhu.github.io/tags/文档编写/"}]}]}